name: DevDojo Java 21 ECS Service Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: greetingstestservice # Define your ECR repository name here
      AWS_REGION: us-east-1 # Define your AWS region here
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          cache: "maven"
          distribution: "adopt"

      - name: Clean project with Maven
        run: mvn clean install
        working-directory: ./app

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION || aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Build, tag, and push Docker image to Amazon ECR
        run: |
          cd app
          docker build -t ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: latest

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install AWS CDK
        run: |
          cd infra
          npm install -g aws-cdk

      - name: Install NPM dependencies
        run: |
          cd infra
          npm install

      - name: Deploy to AWS with CDK
        run: |
          cd infra
          cdk deploy --require-approval never -c imageUri=${{ env.IMAGE_URI }}
        env:
          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ inputs.AWS_REGION }}
